package AllCollection.Arraylist;

import java.util.*;

public class PipelineQueries {
    public static List<Integer> pipelineQueries(List<int[]> queries) {
        Deque<Integer> pipeline = new LinkedList<>();
        Map<Integer, Integer> frequency = new HashMap<>();
        List<Integer> removedElements = new ArrayList<>();

        for (int[] query : queries) {
            int x = query[0];
            int n = query[1];

            if (x == 1) {
                pipeline.addFirst(n);
                frequency.put(n, frequency.getOrDefault(n, 0) + 1);
            } else if (x == 2) {
                if (!pipeline.isEmpty()) {
                    int maxFreq = Collections.max(frequency.values());
                    List<Integer> mostFrequent = new ArrayList<>();

                    for (int num : pipeline) {
                        if (frequency.get(num) == maxFreq) {
                            mostFrequent.add(num);
                        }
                    }

                    int toRemove = mostFrequent.get(mostFrequent.size() - 1);
                    pipeline.removeFirstOccurrence(toRemove);
                    frequency.put(toRemove, frequency.get(toRemove) - 1);
                    removedElements.add(toRemove);
                } else {
                    removedElements.add(-1);
                }
            }
        }

        return removedElements;
    }

    public static void main(String[] args) {
        List<int[]> queries = new ArrayList<>();
        queries.add(new int[]{1, 2});
        queries.add(new int[]{1, 4});
        queries.add(new int[]{1, 3});
        queries.add(new int[]{1, 2});
        queries.add(new int[]{2, -1});
        queries.add(new int[]{2, -1});

        List<Integer> result = pipelineQueries(queries);
        System.out.println(result); // Output: [2, 3]
    }
}
